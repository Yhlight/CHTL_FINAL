// 完整的CHTL示例，展示所有特性
// 这是一个展示CHTL语言所有特性的完整示例

[Template] @Style button {
    background-color: {{color}};
    color: {{textColor}};
    padding: {{padding}};
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    
    &:hover {
        background-color: {{hoverColor}};
        transform: translateY(-2px);
    }
    
    &:active {
        transform: translateY(0);
    }
}

[Custom] @Style button {
    delete background-color;
    insert border: 2px solid {{borderColor}};
    insert box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

[Template] @Element card {
    <div class="card">
        <div class="card-header">
            <h3>{{title}}</h3>
        </div>
        <div class="card-body">
            {{content}}
        </div>
        <div class="card-footer">
            <button class="btn-primary">{{buttonText}}</button>
        </div>
    </div>
}

[Template] @Var theme {
    primaryColor: #007bff;
    secondaryColor: #6c757d;
    successColor: #28a745;
    dangerColor: #dc3545;
    warningColor: #ffc107;
    infoColor: #17a2b8;
    lightColor: #f8f9fa;
    darkColor: #343a40;
}

[Origin] @Html {
    <div class="external-widget">
        <h4>External Widget</h4>
        <p>This is external HTML content embedded in CHTL.</p>
    </div>
}

[Import] @Chtl {
    from: "components/header.chtl";
    as: "Header";
}

[Import] @Chtl {
    from: "components/footer.chtl";
    as: "Footer";
}

[Import] @Css {
    from: "styles/main.css";
}

[Import] @JavaScript {
    from: "scripts/main.js";
}

[Configuration] {
    [Name] {
        template: "Template";
        custom: "Custom";
        origin: "Origin";
        import: "Import";
        namespace: "Namespace";
        configuration: "Configuration";
    }
    
    disableAutoAddClassId: false;
    disableDefaultNamespace: false;
    disableCustomOriginTypes: false;
}

[Namespace] MyApp {
    html {
        head {
            title { "{{pageTitle}} - My CHTL App" }
            meta {
                charset: "utf-8";
                viewport: "width=device-width, initial-scale=1.0";
            }
            link {
                rel: "stylesheet";
                href: "styles/main.css";
            }
            style {
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 0 20px;
                }
                
                .header {
                    background-color: @primaryColor;
                    color: white;
                    padding: 1rem 0;
                }
                
                .main-content {
                    padding: 2rem 0;
                }
                
                .footer {
                    background-color: @darkColor;
                    color: white;
                    padding: 1rem 0;
                    text-align: center;
                }
                
                .card {
                    background: white;
                    border-radius: 8px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    margin-bottom: 1rem;
                    overflow: hidden;
                }
                
                .card-header {
                    background-color: @lightColor;
                    padding: 1rem;
                    border-bottom: 1px solid #dee2e6;
                }
                
                .card-body {
                    padding: 1rem;
                }
                
                .card-footer {
                    background-color: @lightColor;
                    padding: 1rem;
                    border-top: 1px solid #dee2e6;
                }
                
                .btn-primary {
                    background-color: @primaryColor;
                    color: white;
                    padding: 0.5rem 1rem;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    transition: background-color 0.3s ease;
                }
                
                .btn-primary:hover {
                    background-color: darken(@primaryColor, 10%);
                }
                
                .btn-secondary {
                    background-color: @secondaryColor;
                    color: white;
                    padding: 0.5rem 1rem;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    transition: background-color 0.3s ease;
                }
                
                .btn-secondary:hover {
                    background-color: darken(@secondaryColor, 10%);
                }
                
                .alert {
                    padding: 1rem;
                    margin-bottom: 1rem;
                    border: 1px solid transparent;
                    border-radius: 4px;
                }
                
                .alert-success {
                    color: @successColor;
                    background-color: lighten(@successColor, 45%);
                    border-color: @successColor;
                }
                
                .alert-danger {
                    color: @dangerColor;
                    background-color: lighten(@dangerColor, 45%);
                    border-color: @dangerColor;
                }
                
                .alert-warning {
                    color: @warningColor;
                    background-color: lighten(@warningColor, 45%);
                    border-color: @warningColor;
                }
                
                .alert-info {
                    color: @infoColor;
                    background-color: lighten(@infoColor, 45%);
                    border-color: @infoColor;
                }
            }
            script {
                // CHTL JS代码
                Vir {
                    name: "appState";
                    properties: {
                        currentUser: null;
                        isLoggedIn: false;
                        theme: "light";
                        language: "en";
                    };
                }
                
                Vir {
                    name: "utils";
                    properties: {
                        formatDate: function(date) {
                            return new Date(date).toLocaleDateString();
                        };
                        formatCurrency: function(amount) {
                            return new Intl.NumberFormat('en-US', {
                                style: 'currency',
                                currency: 'USD'
                            }).format(amount);
                        };
                        debounce: function(func, wait) {
                            let timeout;
                            return function executedFunction(...args) {
                                const later = () => {
                                    clearTimeout(timeout);
                                    func(...args);
                                };
                                clearTimeout(timeout);
                                timeout = setTimeout(later, wait);
                            };
                        };
                    };
                }
                
                Listen {
                    event: "DOMContentLoaded";
                    handler: function() {
                        console.log("CHTL App loaded successfully!");
                        initializeApp();
                    };
                }
                
                Listen {
                    event: "resize";
                    handler: function() {
                        handleResize();
                    };
                }
                
                Animate {
                    name: "fadeIn";
                    properties: {
                        duration: 1000;
                        easing: "ease-in-out";
                        keyframes: {
                            from: { opacity: 0; transform: translateY(20px); };
                            to: { opacity: 1; transform: translateY(0); };
                        };
                    };
                }
                
                Animate {
                    name: "slideIn";
                    properties: {
                        duration: 500;
                        easing: "ease-out";
                        keyframes: {
                            from: { transform: translateX(-100%); };
                            to: { transform: translateX(0); };
                        };
                    };
                }
                
                Router {
                    name: "appRouter";
                    routes: {
                        "/": "homePage";
                        "/about": "aboutPage";
                        "/contact": "contactPage";
                        "/profile": "profilePage";
                    };
                }
                
                ScriptLoader {
                    name: "moduleLoader";
                    properties: {
                        loadModule: function(moduleName) {
                            return import(`./modules/${moduleName}.js`);
                        };
                        loadCSS: function(cssFile) {
                            const link = document.createElement('link');
                            link.rel = 'stylesheet';
                            link.href = cssFile;
                            document.head.appendChild(link);
                        };
                    };
                }
                
                util {
                    name: "apiClient";
                    properties: {
                        baseURL: "https://api.example.com";
                        timeout: 5000;
                        headers: {
                            "Content-Type": "application/json";
                            "Accept": "application/json";
                        };
                        get: function(url) {
                            return fetch(`${this.baseURL}${url}`, {
                                method: "GET",
                                headers: this.headers
                            }).then(response => response.json());
                        };
                        post: function(url, data) {
                            return fetch(`${this.baseURL}${url}`, {
                                method: "POST",
                                headers: this.headers,
                                body: JSON.stringify(data)
                            }).then(response => response.json());
                        };
                    };
                }
                
                // 普通JavaScript代码
                function initializeApp() {
                    console.log("Initializing CHTL App...");
                    
                    // 设置主题
                    const theme = localStorage.getItem('theme') || 'light';
                    document.body.setAttribute('data-theme', theme);
                    
                    // 设置语言
                    const language = localStorage.getItem('language') || 'en';
                    document.documentElement.setAttribute('lang', language);
                    
                    // 初始化路由
                    appRouter.navigate(window.location.pathname);
                    
                    // 初始化动画
                    const animatedElements = document.querySelectorAll('[data-animate]');
                    animatedElements.forEach(element => {
                        const animationName = element.getAttribute('data-animate');
                        if (animationName === 'fadeIn') {
                            fadeIn.start(element);
                        } else if (animationName === 'slideIn') {
                            slideIn.start(element);
                        }
                    });
                }
                
                function handleResize() {
                    console.log("Window resized:", window.innerWidth, "x", window.innerHeight);
                    
                    // 响应式处理
                    if (window.innerWidth < 768) {
                        document.body.classList.add('mobile');
                    } else {
                        document.body.classList.remove('mobile');
                    }
                }
                
                function showAlert(message, type = 'info') {
                    const alertDiv = document.createElement('div');
                    alertDiv.className = `alert alert-${type}`;
                    alertDiv.textContent = message;
                    
                    document.body.insertBefore(alertDiv, document.body.firstChild);
                    
                    setTimeout(() => {
                        alertDiv.remove();
                    }, 5000);
                }
                
                function toggleTheme() {
                    const currentTheme = document.body.getAttribute('data-theme');
                    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
                    
                    document.body.setAttribute('data-theme', newTheme);
                    localStorage.setItem('theme', newTheme);
                    
                    showAlert(`Theme changed to ${newTheme}`, 'success');
                }
                
                function changeLanguage(lang) {
                    document.documentElement.setAttribute('lang', lang);
                    localStorage.setItem('language', lang);
                    
                    showAlert(`Language changed to ${lang}`, 'success');
                }
            }
        }
        body {
            div {
                class: container;
                header {
                    class: header;
                    div {
                        class: container;
                        h1 { "{{appName}}" }
                        nav {
                            a {
                                href: "/";
                                text: "Home";
                            }
                            a {
                                href: "/about";
                                text: "About";
                            }
                            a {
                                href: "/contact";
                                text: "Contact";
                            }
                            button {
                                class: btn-secondary;
                                text: "Toggle Theme";
                                onclick: "toggleTheme()";
                            }
                            select {
                                onchange: "changeLanguage(this.value)";
                                option {
                                    value: "en";
                                    text: "English";
                                }
                                option {
                                    value: "es";
                                    text: "Español";
                                }
                                option {
                                    value: "fr";
                                    text: "Français";
                                }
                            }
                        }
                    }
                }
                main {
                    class: main-content;
                    div {
                        class: container;
                        h2 { "Welcome to CHTL!" }
                        p { "This is a complete example showcasing all CHTL features." }
                        
                        div {
                            class: alert alert-info;
                            text: "This page demonstrates templates, customizations, imports, namespaces, and CHTL JS features."
                        }
                        
                        div {
                            class: card;
                            div {
                                class: card-header;
                                h3 { "Template Example" }
                            }
                            div {
                                class: card-body;
                                p { "This card uses the template system with customizable styling." }
                                button {
                                    class: btn-primary;
                                    text: "Click Me!";
                                    onclick: "showAlert('Button clicked!', 'success')";
                                }
                            }
                        }
                        
                        div {
                            class: card;
                            div {
                                class: card-header;
                                h3 { "CHTL JS Features" }
                            }
                            div {
                                class: card-body;
                                p { "This section demonstrates CHTL JS features like virtual objects, event listeners, animations, and routing." }
                                button {
                                    class: btn-secondary;
                                    text: "Test Animation";
                                    onclick: "fadeIn.start(this)";
                                }
                            }
                        }
                        
                        div {
                            class: card;
                            div {
                                class: card-header;
                                h3 { "External Content" }
                            }
                            div {
                                class: card-body;
                                text: "This content is embedded from an external source using the Origin system."
                            }
                        }
                        
                        div {
                            class: card;
                            div {
                                class: card-header;
                                h3 { "Dynamic Content" }
                            }
                            div {
                                class: card-body;
                                p { "Current time: " }
                                span {
                                    id: "current-time";
                                    text: "Loading...";
                                }
                                script {
                                    setInterval(() => {
                                        document.getElementById('current-time').textContent = new Date().toLocaleString();
                                    }, 1000);
                                }
                            }
                        }
                    }
                }
                footer {
                    class: footer;
                    div {
                        class: container;
                        p { "© 2024 CHTL Example App. All rights reserved." }
                        p { "Built with CHTL - The C++ Hypertext Language" }
                    }
                }
            }
        }
    }
}