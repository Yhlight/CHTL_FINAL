{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":7419,"byte_end":7429,"line_start":244,"line_end":244,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"            pound_token: def_site(),","highlight_start":26,"highlight_end":36}],"label":"expected `Pound`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:244:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pound_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Pound`, found `Span`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":7495,"byte_end":7505,"line_start":246,"line_end":246,"column_start":28,"column_end":38,"is_primary":true,"text":[{"text":"            bracket_token: def_site(),","highlight_start":28,"highlight_end":38}],"label":"expected `Bracket`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Bracket`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":7495,"byte_end":7495,"line_start":246,"line_end":246,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"            bracket_token: def_site(),","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"syn::token::Bracket { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":7505,"byte_end":7505,"line_start":246,"line_end":246,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"            bracket_token: def_site(),","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:246:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            bracket_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Bracket`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Bracket`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            bracket_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Bracket { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":8242,"byte_end":8252,"line_start":268,"line_end":268,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":44}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":8242,"byte_end":8242,"line_start":268,"line_end":268,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":8252,"byte_end":8252,"line_start":268,"line_end":268,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:268:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    brace_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10477,"byte_end":10487,"line_start":344,"line_end":344,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"            pub_token: def_site(),","highlight_start":24,"highlight_end":34}],"label":"expected `Pub`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Pub`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10477,"byte_end":10477,"line_start":344,"line_end":344,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"            pub_token: def_site(),","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"syn::token::Pub { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10487,"byte_end":10487,"line_start":344,"line_end":344,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"            pub_token: def_site(),","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:344:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Pub`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Pub`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            pub_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Pub { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10572,"byte_end":10582,"line_start":348,"line_end":348,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"        trait_token: def_site(),","highlight_start":22,"highlight_end":32}],"label":"expected `Trait`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Trait`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10572,"byte_end":10572,"line_start":348,"line_end":348,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        trait_token: def_site(),","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"syn::token::Trait { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10582,"byte_end":10582,"line_start":348,"line_end":348,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        trait_token: def_site(),","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:348:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        trait_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Trait`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Trait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        trait_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Trait { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10770,"byte_end":10780,"line_start":353,"line_end":353,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":22,"highlight_end":32}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10770,"byte_end":10770,"line_start":353,"line_end":353,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":10780,"byte_end":10780,"line_start":353,"line_end":353,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:353:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        brace_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":25369,"byte_end":25380,"line_start":807,"line_end":807,"column_start":83,"column_end":94,"is_primary":true,"text":[{"text":"                Mode::VisitAll | Mode::Visit | Mode::VisitMut => Stmt::Semi(expr, call_site()),","highlight_start":83,"highlight_end":94}],"label":"expected `Semi`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":25352,"byte_end":25362,"line_start":807,"line_end":807,"column_start":66,"column_end":76,"is_primary":false,"text":[{"text":"                Mode::VisitAll | Mode::Visit | Mode::VisitMut => Stmt::Semi(expr, call_site()),","highlight_start":66,"highlight_end":76}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.109/src/stmt.rs","byte_start":816,"byte_end":820,"line_start":31,"line_end":31,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        Semi(Expr, Token![;]),","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:807:83\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mt => Stmt::Semi(expr, call_site()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Semi`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.109/src/stmt.rs:31:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Semi(Expr, Token![;]),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26224,"byte_end":26234,"line_start":838,"line_end":838,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"                colon_token: Some(def_site()),","highlight_start":35,"highlight_end":45}],"label":"expected `Colon`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26219,"byte_end":26223,"line_start":838,"line_end":838,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"                colon_token: Some(def_site()),","highlight_start":30,"highlight_end":34}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `proc_macro2::Span` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26224,"byte_end":26234,"line_start":838,"line_end":838,"column_start":35,"column_end":45,"is_primary":false,"text":[{"text":"                colon_token: Some(def_site()),","highlight_start":35,"highlight_end":45}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26219,"byte_end":26235,"line_start":838,"line_end":838,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"                colon_token: Some(def_site()),","highlight_start":30,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/option.rs","byte_start":22706,"byte_end":22710,"line_start":579,"line_end":579,"column_start":5,"column_end":9,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:838:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m838\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                colon_token: Some(def_site()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Colon`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the type constructed contains `proc_macro2::Span` due to the type of the argument passed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:838:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m838\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                colon_token: Some(def_site()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument influences the type of `Some`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/option.rs:579:5\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26897,"byte_end":26907,"line_start":865,"line_end":865,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":22,"highlight_end":32}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26897,"byte_end":26897,"line_start":865,"line_end":865,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":26907,"byte_end":26907,"line_start":865,"line_end":865,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        brace_token: def_site(),","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:865:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        brace_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27086,"byte_end":27096,"line_start":873,"line_end":873,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"        fat_arrow_token: def_site(),","highlight_start":26,"highlight_end":36}],"label":"expected `FatArrow`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:873:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fat_arrow_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `FatArrow`, found `Span`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27438,"byte_end":27448,"line_start":889,"line_end":889,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"        fn_token: def_site(),","highlight_start":19,"highlight_end":29}],"label":"expected `Fn`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Fn`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27438,"byte_end":27438,"line_start":889,"line_end":889,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"        fn_token: def_site(),","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"syn::token::Fn { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27448,"byte_end":27448,"line_start":889,"line_end":889,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"        fn_token: def_site(),","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:889:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Fn`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Fn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Fn { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27547,"byte_end":27557,"line_start":892,"line_end":892,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"        paren_token: def_site(),","highlight_start":22,"highlight_end":32}],"label":"expected `Paren`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Paren`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27547,"byte_end":27547,"line_start":892,"line_end":892,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        paren_token: def_site(),","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"syn::token::Paren { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27557,"byte_end":27557,"line_start":892,"line_end":892,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        paren_token: def_site(),","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:892:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m892\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        paren_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Paren`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Paren`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m892\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        paren_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Paren { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":28618,"byte_end":28619,"line_start":921,"line_end":921,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            p","highlight_start":13,"highlight_end":14}],"label":"expected `Punctuated<FnArg, ...>`, found `Punctuated<_, Span>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27711,"byte_end":27721,"line_start":896,"line_end":896,"column_start":26,"column_end":36,"is_primary":false,"text":[{"text":"            p.push_punct(def_site());","highlight_start":26,"highlight_end":36}],"label":"this argument has type `proc_macro2::Span`...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":27698,"byte_end":27699,"line_start":896,"line_end":896,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            p.push_punct(def_site());","highlight_start":13,"highlight_end":14}],"label":"... which causes `p` to have type `syn::punctuated::Punctuated<_, proc_macro2::Span>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `syn::punctuated::Punctuated<FnArg, syn::token::Comma>`\n   found struct `syn::punctuated::Punctuated<_, proc_macro2::Span>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:921:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            p.push_punct(def_site());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument has type `proc_macro2::Span`...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m... which causes `p` to have type `syn::punctuated::Punctuated<_, proc_macro2::Span>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m921\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            p\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Punctuated<FnArg, ...>`, found `Punctuated<_, Span>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `syn::punctuated::Punctuated<\u001b[0m\u001b[0m\u001b[1m\u001b[35mFnArg\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35msyn::token::Comma\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found struct `syn::punctuated::Punctuated<\u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mproc_macro2::Span\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":29822,"byte_end":29832,"line_start":965,"line_end":965,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":44}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":29822,"byte_end":29822,"line_start":965,"line_end":965,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":29832,"byte_end":29832,"line_start":965,"line_end":965,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:965:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    brace_token: def_site(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31380,"byte_end":31390,"line_start":1020,"line_end":1020,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":44}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31380,"byte_end":31380,"line_start":1020,"line_end":1020,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31390,"byte_end":31390,"line_start":1020,"line_end":1020,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1020:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1020\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    brace_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1020\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31535,"byte_end":31545,"line_start":1023,"line_end":1023,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"                        match_token: def_site(),","highlight_start":38,"highlight_end":48}],"label":"expected `Match`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Match`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31535,"byte_end":31535,"line_start":1023,"line_end":1023,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"                        match_token: def_site(),","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"syn::token::Match { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31545,"byte_end":31545,"line_start":1023,"line_end":1023,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"                        match_token: def_site(),","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1023:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1023\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        match_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Match`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Match`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1023\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        match_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Match { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31631,"byte_end":31641,"line_start":1025,"line_end":1025,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"                        brace_token: def_site(),","highlight_start":38,"highlight_end":48}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31631,"byte_end":31631,"line_start":1025,"line_end":1025,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"                        brace_token: def_site(),","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":31641,"byte_end":31641,"line_start":1025,"line_end":1025,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"                        brace_token: def_site(),","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1025:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1025\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        brace_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1025\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32372,"byte_end":32382,"line_start":1053,"line_end":1053,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"            fn_token: def_site(),","highlight_start":23,"highlight_end":33}],"label":"expected `Fn`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Fn`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32372,"byte_end":32372,"line_start":1053,"line_end":1053,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"            fn_token: def_site(),","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"syn::token::Fn { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32382,"byte_end":32382,"line_start":1053,"line_end":1053,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"            fn_token: def_site(),","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1053:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1053\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            fn_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Fn`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Fn`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1053\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            fn_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Fn { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32470,"byte_end":32480,"line_start":1056,"line_end":1056,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"            paren_token: def_site(),","highlight_start":26,"highlight_end":36}],"label":"expected `Paren`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Paren`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32470,"byte_end":32470,"line_start":1056,"line_end":1056,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"            paren_token: def_site(),","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"syn::token::Paren { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32480,"byte_end":32480,"line_start":1056,"line_end":1056,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"            paren_token: def_site(),","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1056:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1056\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            paren_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Paren`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Paren`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1056\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            paren_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Paren { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33064,"byte_end":33065,"line_start":1070,"line_end":1070,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"                p","highlight_start":17,"highlight_end":18}],"label":"expected `Punctuated<FnArg, ...>`, found `Punctuated<_, Span>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32650,"byte_end":32660,"line_start":1060,"line_end":1060,"column_start":30,"column_end":40,"is_primary":false,"text":[{"text":"                p.push_punct(def_site());","highlight_start":30,"highlight_end":40}],"label":"this argument has type `proc_macro2::Span`...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":32637,"byte_end":32638,"line_start":1060,"line_end":1060,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                p.push_punct(def_site());","highlight_start":17,"highlight_end":18}],"label":"... which causes `p` to have type `syn::punctuated::Punctuated<_, proc_macro2::Span>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `syn::punctuated::Punctuated<FnArg, syn::token::Comma>`\n   found struct `syn::punctuated::Punctuated<_, proc_macro2::Span>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1070:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1060\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                p.push_punct(def_site());\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument has type `proc_macro2::Span`...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m... which causes `p` to have type `syn::punctuated::Punctuated<_, proc_macro2::Span>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1070\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                p\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Punctuated<FnArg, ...>`, found `Punctuated<_, Span>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `syn::punctuated::Punctuated<\u001b[0m\u001b[0m\u001b[1m\u001b[35mFnArg\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35msyn::token::Comma\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m                found struct `syn::punctuated::Punctuated<\u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mproc_macro2::Span\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33490,"byte_end":33500,"line_start":1085,"line_end":1085,"column_start":28,"column_end":38,"is_primary":true,"text":[{"text":"                and_token: def_site(),","highlight_start":28,"highlight_end":38}],"label":"expected `And`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1085:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1085\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                and_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `And`, found `Span`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33580,"byte_end":33590,"line_start":1087,"line_end":1087,"column_start":47,"column_end":57,"is_primary":true,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":47,"highlight_end":57}],"label":"expected `Mut`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33575,"byte_end":33579,"line_start":1087,"line_end":1087,"column_start":42,"column_end":46,"is_primary":false,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":42,"highlight_end":46}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `proc_macro2::Span` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33580,"byte_end":33590,"line_start":1087,"line_end":1087,"column_start":47,"column_end":57,"is_primary":false,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":47,"highlight_end":57}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33575,"byte_end":33591,"line_start":1087,"line_end":1087,"column_start":42,"column_end":58,"is_primary":true,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":42,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/option.rs","byte_start":22706,"byte_end":22710,"line_start":579,"line_end":579,"column_start":5,"column_end":9,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `syn::token::Mut`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33580,"byte_end":33580,"line_start":1087,"line_end":1087,"column_start":47,"column_end":47,"is_primary":true,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":47,"highlight_end":47}],"label":null,"suggested_replacement":"syn::token::Mut { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":33590,"byte_end":33590,"line_start":1087,"line_end":1087,"column_start":57,"column_end":57,"is_primary":true,"text":[{"text":"                mutability: if mutable { Some(def_site()) } else { None },","highlight_start":57,"highlight_end":57}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1087:47\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mutable { Some(def_site()) } else { None },\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Mut`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the type constructed contains `proc_macro2::Span` due to the type of the argument passed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1087:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0me { Some(def_site()) } else { None },\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument influences the type of `Some`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/option.rs:579:5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Mut`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                mutability: if mutable { Some(\u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Mut { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m) } else { None },\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":40619,"byte_end":40629,"line_start":1253,"line_end":1253,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":44}],"label":"expected `Brace`, found `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try wrapping the expression in `syn::token::Brace`","code":null,"level":"help","spans":[{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":40619,"byte_end":40619,"line_start":1253,"line_end":1253,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"syn::token::Brace { span: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs","byte_start":40629,"byte_end":40629,"line_start":1253,"line_end":1253,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"                    brace_token: def_site(),","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/swc_visit_macros-0.2.3/src/lib.rs:1253:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    brace_token: def_site(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Brace`, found `Span`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `syn::token::Brace`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    brace_token: \u001b[0m\u001b[0m\u001b[38;5;10msyn::token::Brace { span: \u001b[0m\u001b[0mdef_site()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 23 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 23 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
