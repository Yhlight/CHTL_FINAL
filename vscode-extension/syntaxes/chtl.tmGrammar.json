{
  "scopeName": "source.chtl",
  "fileTypes": ["chtl", "cmod"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#tags"
    },
    {
      "include": "#attributes"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.chtl",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.chtl",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.dash.chtl",
          "begin": "--",
          "end": "$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.chtl",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.chtl",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.chtl",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.chtl",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.chtl",
          "match": "\\b\\d+(\\.\\d+)?(px|em|rem|%|vh|vw|pt|pc|in|cm|mm)?\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.chtl",
          "match": "\\b(html|head|body|div|span|p|h1|h2|h3|h4|h5|h6|a|img|ul|ol|li|table|tr|td|th|form|input|button|section|article|nav|aside|header|footer|main)\\b"
        },
        {
          "name": "keyword.other.chtl",
          "match": "\\b(text|style|script|template|custom|origin|import|namespace|configuration|info|export|use)\\b"
        },
        {
          "name": "keyword.control.chtl",
          "match": "\\b(if|else|for|while|function|return|var|let|const|class|interface|type|enum)\\b"
        }
      ]
    },
    "tags": {
      "patterns": [
        {
          "name": "entity.name.tag.chtl",
          "match": "\\b\\w+\\b",
          "captures": {
            "1": {
              "name": "entity.name.tag.chtl"
            }
          }
        }
      ]
    },
    "attributes": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.chtl",
          "match": "\\b\\w+\\s*[:=]",
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.chtl"
            }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.chtl",
          "match": "[:=+\\-*/%<>!&|\\?]"
        }
      ]
    }
  }
}