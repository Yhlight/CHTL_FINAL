// CJMOD测试模块
// 这是一个CJMOD模块示例，展示CJMOD API的使用

[Info]
{
    name: "TestModule";
    version: "1.0.0";
    description: "CJMOD API测试模块";
    author: "CHTL Team";
    license: "MIT";
    dependencies: ["Chtholly"];
}

[Export]
{
    // 导出工具函数
    function: "formatString";
    type: "Utility";
    description: "格式化字符串";
    parameters: ["template", "values"];
    returnType: "string";
    
    function: "createElement";
    type: "Utility";
    description: "创建DOM元素";
    parameters: ["tagName", "attributes", "children"];
    returnType: "Element";
    
    // 导出事件处理函数
    function: "addClickListener";
    type: "EventHandler";
    description: "添加点击事件监听器";
    parameters: ["selector", "handler"];
    returnType: "void";
    
    // 导出动画函数
    function: "fadeIn";
    type: "Animation";
    description: "淡入动画";
    parameters: ["element", "duration"];
    returnType: "void";
    
    // 导出路由函数
    function: "navigateTo";
    type: "Router";
    description: "导航到指定路由";
    parameters: ["route", "params"];
    returnType: "void";
    
    // 导出虚对象函数
    function: "getVirtualInfo";
    type: "VirtualObject";
    description: "获取虚对象信息";
    parameters: ["object"];
    returnType: "object";
}

// 模块实现
script
{
    // 格式化字符串函数
    function formatString(template, values) {
        return template.replace(/\{\{(\w+)\}\}/g, (match, key) => {
            return values[key] || match;
        });
    }
    
    // 创建DOM元素函数
    function createElement(tagName, attributes = {}, children = []) {
        const element = document.createElement(tagName);
        
        // 设置属性
        for (const [key, value] of Object.entries(attributes)) {
            if (key === 'className') {
                element.className = value;
            } else if (key === 'innerHTML') {
                element.innerHTML = value;
            } else {
                element.setAttribute(key, value);
            }
        }
        
        // 添加子元素
        children.forEach(child => {
            if (typeof child === 'string') {
                element.appendChild(document.createTextNode(child));
            } else if (child instanceof Element) {
                element.appendChild(child);
            }
        });
        
        return element;
    }
    
    // 添加点击事件监听器
    function addClickListener(selector, handler) {
        const elements = document.querySelectorAll(selector);
        elements.forEach(element => {
            element.addEventListener('click', handler);
        });
    }
    
    // 淡入动画
    function fadeIn(element, duration = 300) {
        element.style.opacity = '0';
        element.style.display = 'block';
        
        const start = performance.now();
        
        function animate(currentTime) {
            const elapsed = currentTime - start;
            const progress = Math.min(elapsed / duration, 1);
            
            element.style.opacity = progress;
            
            if (progress < 1) {
                requestAnimationFrame(animate);
            }
        }
        
        requestAnimationFrame(animate);
    }
    
    // 导航到指定路由
    function navigateTo(route, params = {}) {
        const url = new URL(route, window.location.origin);
        
        // 添加参数
        for (const [key, value] of Object.entries(params)) {
            url.searchParams.set(key, value);
        }
        
        window.history.pushState({}, '', url);
        window.dispatchEvent(new PopStateEvent('popstate'));
    }
    
    // 获取虚对象信息
    function getVirtualInfo(object) {
        if (object && object.vir) {
            return {
                type: object.vir.type || 'unknown',
                name: object.vir.name || 'unnamed',
                properties: object.vir.properties || {},
                methods: object.vir.methods || {},
                metadata: object.vir.metadata || {}
            };
        }
        
        return {
            type: 'unknown',
            name: 'unnamed',
            properties: {},
            methods: {},
            metadata: {}
        };
    }
    
    // 使用CJMOD API创建CHTL JS函数
    const cjmodAPI = {
        // 创建格式化字符串函数
        createFormatStringFunction: function() {
            return {
                name: 'formatString',
                type: 'Utility',
                parameters: [
                    { name: 'template', type: 'string', required: true },
                    { name: 'values', type: 'object', required: false, default: {} }
                ],
                implementation: formatString
            };
        },
        
        // 创建元素创建函数
        createElementFunction: function() {
            return {
                name: 'createElement',
                type: 'Utility',
                parameters: [
                    { name: 'tagName', type: 'string', required: true },
                    { name: 'attributes', type: 'object', required: false, default: {} },
                    { name: 'children', type: 'array', required: false, default: [] }
                ],
                implementation: createElement
            };
        },
        
        // 创建事件处理函数
        createEventHandlerFunction: function() {
            return {
                name: 'addClickListener',
                type: 'EventHandler',
                parameters: [
                    { name: 'selector', type: 'string', required: true },
                    { name: 'handler', type: 'function', required: true }
                ],
                implementation: addClickListener
            };
        },
        
        // 创建动画函数
        createAnimationFunction: function() {
            return {
                name: 'fadeIn',
                type: 'Animation',
                parameters: [
                    { name: 'element', type: 'element', required: true },
                    { name: 'duration', type: 'number', required: false, default: 300 }
                ],
                implementation: fadeIn
            };
        },
        
        // 创建路由函数
        createRouterFunction: function() {
            return {
                name: 'navigateTo',
                type: 'Router',
                parameters: [
                    { name: 'route', type: 'string', required: true },
                    { name: 'params', type: 'object', required: false, default: {} }
                ],
                implementation: navigateTo
            };
        },
        
        // 创建虚对象函数
        createVirtualObjectFunction: function() {
            return {
                name: 'getVirtualInfo',
                type: 'VirtualObject',
                parameters: [
                    { name: 'object', type: 'object', required: true }
                ],
                implementation: getVirtualInfo
            };
        }
    };
    
    // 导出CJMOD API
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = cjmodAPI;
    } else if (typeof window !== 'undefined') {
        window.CJMODTestModule = cjmodAPI;
    }
}