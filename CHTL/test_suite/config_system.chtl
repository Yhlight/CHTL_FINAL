// 配置组系统测试
// 测试自定义关键字名称和模块配置

use html5;

[Configuration] {
    // 自定义关键字名称
    [Name] {
        CUSTOM_STYLE: "@Style";
        CUSTOM_ELEMENT: "@Element";
        CUSTOM_VAR: "@Var";
        TEMPLATE_STYLE: "@Style";
        TEMPLATE_ELEMENT: "@Element";
        TEMPLATE_VAR: "@Var";
        ORIGIN_HTML: "@Html";
        ORIGIN_STYLE: "@Style";
        ORIGIN_JAVASCRIPT: "@JavaScript";
        IMPORT_HTML: "@Html";
        IMPORT_STYLE: "@Style";
        IMPORT_JAVASCRIPT: "@JavaScript";
        IMPORT_CHTL: "@Chtl";
        KEYWORD_INHERIT: "inherit";
        KEYWORD_DELETE: "delete";
        KEYWORD_INSERT: "insert";
        KEYWORD_FROM: "from";
        KEYWORD_AS: "as";
        KEYWORD_EXCEPT: "except";
        KEYWORD_USE: "use";
        KEYWORD_HTML5: "html5";
        KEYWORD_TEXT: "text";
        KEYWORD_STYLE: "style";
        KEYWORD_SCRIPT: "script";
        KEYWORD_CUSTOM: "[Custom]";
        KEYWORD_TEMPLATE: "[Template]";
        KEYWORD_ORIGIN: "[Origin]";
        KEYWORD_IMPORT: "[Import]";
        KEYWORD_NAMESPACE: "[Namespace]";
    }
}

// 使用标准语法的模板
[Template] @Style CustomButtonStyle {
    background: "var(--primary-color)";
    color: "white";
    padding: "10px 20px";
    border: "none";
    border-radius: "5px";
    cursor: "pointer";
    transition: "all 0.3s ease";
    
    &:hover {
        background: "var(--primary-hover)";
        transform: "translateY(-2px)";
    }
}

[Template] @Element CustomButton {
    button {
        class: "btn custom-btn";
        text: "Custom Button";
    }
}

[Template] @Var CustomTheme {
    primaryColor: "#007bff";
    primaryHover: "#0056b3";
    secondaryColor: "#6c757d";
    successColor: "#28a745";
    dangerColor: "#dc3545";
    warningColor: "#ffc107";
    infoColor: "#17a2b8";
}

// 使用标准语法的自定义系统
[Custom] @Style DangerButtonStyle {
    @Style CustomButtonStyle {
        background: "var(--danger-color)";
        
        &:hover {
            background: "var(--danger-hover)";
        }
    }
}

[Custom] @Element DangerButton {
    button {
        class: "btn danger-btn";
        text: "Danger Button";
    }
}

[Custom] @Var DangerTheme {
    dangerHover: "#c82333";
    primaryColor: "var(--danger-color)";
    primaryHover: "var(--danger-hover)";
}

// 使用自定义关键字的原始嵌入
[Origin] @Html {
    <div class="config-demo">
        <h2>Configuration System Demo</h2>
        <p>This demonstrates the configuration system with custom keywords.</p>
    </div>
}

[Origin] @Style {
    .config-demo {
        padding: 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 10px;
        margin: 20px 0;
    }
    
    .config-demo h2 {
        margin-bottom: 15px;
        font-size: 24px;
    }
    
    .config-demo p {
        font-size: 16px;
        line-height: 1.6;
    }
}

[Origin] @JavaScript {
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Configuration system demo loaded');
        
        // 使用配置的变量
        const primaryColor = getComputedStyle(document.documentElement)
            .getPropertyValue('--primary-color');
        console.log('Primary color:', primaryColor);
    });
}

// 使用标准语法的导入
[Import] @Chtl from "components/header.chtl" as Header;
[Import] @Style from "styles/theme.css" as ThemeStyles;

// 使用标准语法的约束
[Namespace] ConfigApp {
    except div, span, p, h1, h2, h3, h4, h5, h6, button, input, form;
    except [Custom] CustomButton, DangerButton;
    except [Template] @Var CustomTheme, DangerTheme;
}

// 应用配置的应用
div {
    class: "config-app";
    
    // 使用自定义元素
    @Element CustomButton;
    @Element DangerButton;
    @Element CustomButton;
    
    // 使用原始嵌入的内容
    [Origin] @Html {
        <div class="button-group">
            <button class="btn btn-primary">Primary</button>
            <button class="btn btn-secondary">Secondary</button>
            <button class="btn btn-success">Success</button>
            <button class="btn btn-danger">Danger</button>
        </div>
    }
    
    // 使用标准语法的样式
    style {
        .config-app {
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        .button-group {
            display: flex;
            gap: 10px;
            margin: 20px 0;
        }
        
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: var(--primary-color);
            color: white;
        }
        
        .btn-secondary {
            background: var(--secondary-color);
            color: white;
        }
        
        .btn-success {
            background: var(--success-color);
            color: white;
        }
        
        .btn-danger {
            background: var(--danger-color);
            color: white;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
    }
}