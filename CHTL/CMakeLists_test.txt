cmake_minimum_required(VERSION 3.16)
project(CHTL_Test VERSION 1.0.0 LANGUAGES CXX)

# 设置C++标准
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 设置编译选项
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -O2")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -O0")

# 包含目录
include_directories(${CMAKE_SOURCE_DIR})

# 源文件
set(SOURCES
    CHTL/CHTLLexer/Token.cpp
    CHTL/CHTLLexer/CHTLLexer.cpp
    CHTL/CHTLNode/BaseNode.cpp
    CHTL/CHTLNode/ElementNode.cpp
    CHTL/CHTLNode/TextNode.cpp
    CHTL/CHTLNode/CommentNode.cpp
    CHTL/CHTLNode/StyleNode.cpp
    CHTL/CHTLNode/ScriptNode.cpp
    CHTL/CHTLNode/TemplateNode.cpp
    CHTL/CHTLNode/CustomNode.cpp
    CHTL/CHTLNode/OriginNode.cpp
    CHTL/CHTLNode/ImportNode.cpp
    CHTL/CHTLNode/NamespaceNode.cpp
    CHTL/CHTLNode/ConstraintNode.cpp
    CHTL/CHTLNode/ConfigurationNode.cpp
    CHTL/CHTLNode/UseNode.cpp
    CHTL/CHTLConstraint/CHTLConstraintProcessor.cpp
    CHTL/CHTLConfiguration/CHTLConfigurationProcessor.cpp
    CHTL/CHTLUse/CHTLUseProcessor.cpp
    CHTL/CHTLParser/CHTLParser.cpp
    CHTL/CHTLGenerator/CHTLGenerator.cpp
    CHTL/CHTLStyle/CHTLStyleProcessor.cpp
    CHTL/CHTLProperty/CHTLPropertyReference.cpp
    CHTL/CMODSystem/CMODModule.cpp
    CHTL/CMODSystem/CMODLoader.cpp
    CHTL_JS/CHTLJSLexer/CHTLJSToken.cpp
    CHTL_JS/CHTLJSLexer/CHTLJSLexer.cpp
    CHTL_JS/CHTLJSLexer/CHTLJSGlobalMap.cpp
    CHTL_JS/CHTLJSNode/CHTLJSBaseNode.cpp
    CHTL_JS/CHTLJSParser/CHTLJSParser.cpp
    CHTL_JS/CHTLJSGenerator/CHTLJSGenerator.cpp
    CHTL_JS/CHTLJSEnhanced/CHTLJSEnhancedSelector.cpp
    CHTL_JS/CHTLJSEnhanced/CHTLJSEnhancedListener.cpp
    CHTL_JS/CHTLJSEnhanced/CHTLJSEventDelegation.cpp
    CHTL_JS/CJMODSystem/CJMODModule.cpp
    CHTL_JS/CJMODSystem/CJMODSyntax.cpp
    CHTL_JS/CJMODSystem/CJMODArg.cpp
    CHTL_JS/CJMODSystem/CJMODScanner.cpp
    CHTL_JS/CJMODSystem/CJMODGenerator.cpp
    Scanner/UnifiedScanner.cpp
    Scanner/CHTLUnifiedScanner.cpp
    CodeMerger/CodeMerger.cpp
    CompilerDispatcher/CompilerDispatcher.cpp
)

# 创建测试可执行文件
add_executable(chtl_test
    test_main.cpp
    ${SOURCES}
)

# 链接库
target_link_libraries(chtl_test)